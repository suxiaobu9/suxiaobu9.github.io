{"version":3,"sources":["webpack:///./node_modules/node-libs-browser/mock/process.js","webpack:///./node_modules/path-browserify/index.js"],"names":["exports","nextTick","fn","args","Array","prototype","slice","call","arguments","shift","setTimeout","apply","platform","arch","execPath","title","pid","browser","env","argv","binding","name","Error","path","cwd","chdir","dir","resolve","exit","kill","umask","dlopen","uptime","memoryUsage","uvCounters","features","normalizeArray","parts","allowAboveRoot","up","i","length","last","splice","unshift","basename","start","end","matchedSlash","charCodeAt","filter","xs","f","res","push","resolvedPath","resolvedAbsolute","process","TypeError","charAt","split","p","join","normalize","isAbsolute","trailingSlash","substr","paths","index","relative","from","to","trim","arr","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","code","hasRoot","ext","extname","startDot","startPart","preDotState","str","len"],"mappings":"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","file":"js/chunk-vendors~9c5b28f6.1edcb950.js","sourcesContent":["exports.nextTick = function nextTick(fn) {\n    var args = Array.prototype.slice.call(arguments);\n    args.shift();\n    setTimeout(function () {\n        fn.apply(null, args);\n    }, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n"],"sourceRoot":""}